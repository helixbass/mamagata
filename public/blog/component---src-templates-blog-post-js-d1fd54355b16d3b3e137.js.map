{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["BlogPostTemplate","_ref","_ref$data","data","post","markdownRemark","siteTitle","site","siteMetadata","title","_ref$pageContext","pageContext","previous","next","location","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","frontmatter","description","excerpt","style","Object","assign","scale","display","marginBottom","rhythm","marginTop","date","dangerouslySetInnerHTML","__html","html","_components_bio__WEBPACK_IMPORTED_MODULE_3__","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","pageQuery","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_lawton__WEBPACK_IMPORTED_MODULE_1__","typography_theme_lawton__WEBPACK_IMPORTED_MODULE_1___default","Lawton","baseLineHeight","overrideThemeStyles","a.gatsby-resp-image-link","boxShadow","color","h1","h3","h4","code","fontSize","pre code","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","Title","textDecoration","Layout","flow","addProps","_ref2","header","__PATH_PREFIX__","fontFamily","_ref3","marginLeft","marginRight","maxWidth","Date","getFullYear","href","SEO","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","bioQuery","Bio","_public_static_d_2760998521_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"gNAqEeA,UA7DU,SAAAC,GAAA,IAAAC,EAAAD,EACvBE,KACkBC,EAFKF,EAErBG,eAEwBC,EAJHJ,EAGrBK,KACEC,aAAeC,MAJIC,EAAAT,EAOvBU,YAAcC,EAPSF,EAOTE,SAAUC,EAPDH,EAOCG,KACxBC,EARuBb,EAQvBa,SARuB,OAUvBC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQJ,SAAUA,EAAUL,MAAOH,GACjCS,EAAAC,EAAAC,cAACE,EAAA,EAAD,CACEV,MAAOL,EAAKgB,YAAYX,MACxBY,YAAajB,EAAKgB,YAAYC,aAAejB,EAAKkB,UAEpDP,EAAAC,EAAAC,cAAA,UAAKb,EAAKgB,YAAYX,OACtBM,EAAAC,EAAAC,cAAA,KACEM,MAAKC,OAAAC,OAAA,GACAC,aAAM,IADN,CAEHC,QAAO,QACPC,aAAcC,YAAO,GACrBC,UAAWD,aAAQ,MAGpBzB,EAAKgB,YAAYW,MAEpBhB,EAAAC,EAAAC,cAAA,OAAKe,wBAAyB,CAACC,OAAQ7B,EAAK8B,QAC5CnB,EAAAC,EAAAC,cAAA,MACEM,MAAO,CACLK,aAAcC,YAAO,MAGzBd,EAAAC,EAAAC,cAACkB,EAAA,EAAD,MAEApB,EAAAC,EAAAC,cAAA,MACEM,MAAO,CACLI,QAAO,OACPS,SAAQ,OACRC,eAAc,gBACdC,UAAS,OACTC,QAAS,IAGXxB,EAAAC,EAAAC,cAAA,UACGL,GACCG,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,GAAI7B,EAAS8B,OAAOC,KAAMC,IAAI,QAApC,KACKhC,EAASQ,YAAYX,QAI9BM,EAAAC,EAAAC,cAAA,UACGJ,GACCE,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CAAMC,GAAI5B,EAAK6B,OAAOC,KAAMC,IAAI,QAC7B/B,EAAKO,YAAYX,MADpB,UAWH,IAAMoC,EAAS,+CCvEtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAxC,IAAA8B,EAAA,SAaMW,EAAqBC,IAAMC,cAAc,IAEzCV,EAAc,SAAAW,GAAK,OACvBT,EAAAnC,EAAAC,cAACwC,EAAmBI,SAApB,KACG,SAAAC,GACC,OACEF,EAAMzD,MACL2D,EAAgBF,EAAMG,QAAUD,EAAgBF,EAAMG,OAAO5D,MAEtDyD,EAAMI,QAAUJ,EAAMK,UAC5BL,EAAMzD,KAAOyD,EAAMzD,KAAKA,KAAO2D,EAAgBF,EAAMG,OAAO5D,MAGvDgD,EAAAnC,EAAAC,cAAA,uCA4BfgC,EAAYiB,UAAY,CACtB/D,KAAMgE,IAAUC,OAChBL,MAAOI,IAAUE,OAAOC,WACxBN,OAAQG,IAAUI,KAClBN,SAAUE,IAAUI,wCC1DtBzB,EAAAC,EAAAC,EAAA,sBAAAnB,IAAAiB,EAAAC,EAAAC,EAAA,sBAAAtB,IAAA,IAAA8C,EAAA1B,EAAA,KAAA2B,EAAA3B,EAAAM,EAAAoB,GAAAE,EAAA5B,EAAA,KAAA6B,EAAA7B,EAAAM,EAAAsB,GAGAE,IAAOC,eAAiB,KACxBD,IAAOE,oBAAsB,iBAAO,CAClCC,2BAA4B,CAC1BC,UAAS,QAEXhE,EAAG,CACDiE,MAAO,WAETC,GAAI,CACFtD,aAAc,UAEhBuD,GAAI,CACFrD,UAAW,WAEbsD,GAAI,CACFxD,aAAc,WAEhByD,KAAM,CACJC,SAAU,WAEZC,WAAY,CACVD,SAAU,aAMd,IAAME,EAAa,IAAIC,IAAWb,KAOnBY,IACD3D,EAAU2D,EAAV3D,OACAH,EAAS8D,EAAT9D,2BCvCd,IAAsBgE,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oGCMzCK,EAAmB,SAAA9F,GAAkB,IAAfa,EAAeb,EAAfa,SACpBkF,EAAgBC,UAAOC,4BAA4BpF,EAASqF,UAClE,OAAKH,EAIEtC,IAAMzC,cAAcmF,IAApB5E,OAAAC,OAAA,CACLX,WACAkF,iBACGA,EAAcK,OANV,MAUXN,EAAiB7B,UAAY,CAC3BpD,SAAUqD,IAAUmC,MAAM,CACxBH,SAAUhC,IAAUE,OAAOC,aAC1BA,YAGUyB,4GChBTQ,EAAQ,SAAAtG,GAAA,IAAEQ,EAAFR,EAAEQ,MAAF,OACZM,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEjB,MAAO,CACLyD,UAAS,OACTwB,eAAc,OACdvB,MAAK,WAEPxC,GAAG,KAEFhC,IAICgG,EAASC,eACbC,mBAAS,SAAAC,GAAA,IAAE9F,EAAF8F,EAAE9F,SAAUL,EAAZmG,EAAYnG,MAAZ,MAAwB,CAC/BoG,OAjBgBC,WAkBdhG,EAASqF,SACPpF,EAAAC,EAAAC,cAAA,MACEM,MAAKC,OAAAC,OAAA,GACAC,YAAM,KADN,CAEHE,aAAcC,YAAO,KACrBC,UAAW,KAGbf,EAAAC,EAAAC,cAACsF,EAAD,CAAO9F,MAAOA,KAGhBM,EAAAC,EAAAC,cAAA,MACEM,MAAO,CACLwF,WAAU,yBACVjF,UAAW,IAGbf,EAAAC,EAAAC,cAACsF,EAAD,CAAO9F,MAAOA,QAItB,SAAAuG,GAAA,IAAEH,EAAFG,EAAEH,OAAQ5C,EAAV+C,EAAU/C,SAAV,OACElD,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACL0F,WAAU,OACVC,YAAW,OACXC,SAAUtF,YAAO,IACjBU,QAAYV,YAAO,KAAZ,IAAoBA,YAAO,OAGpCd,EAAAC,EAAAC,cAAA,cAAS4F,GACT9F,EAAAC,EAAAC,cAAA,YAAOgD,GACPlD,EAAAC,EAAAC,cAAA,oBACK,IAAImG,MAAOC,cADhB,mBAGEtG,EAAAC,EAAAC,cAAA,KAAGqG,KAAK,4BAAR,cAMOb,uGCtDf,SAASc,EAATtH,GAAyD,IAA3CoB,EAA2CpB,EAA3CoB,YAAamG,EAA8BvH,EAA9BuH,KAAMC,EAAwBxH,EAAxBwH,KAAMC,EAAkBzH,EAAlByH,SAAUjH,EAAQR,EAARQ,MACxCF,EADgDoH,EAAAxH,KAChDI,KAcDqH,EAAkBvG,GAAed,EAAKC,aAAaa,YAEzD,OACEN,EAAAC,EAAAC,cAAC4G,EAAA7G,EAAD,CACE8G,eAAgB,CACdN,QAEF/G,MAAOA,EACPsH,cAAa,QAAUxH,EAAKC,aAAaC,MACzCgH,KAAM,CACJ,CACEO,KAAI,cACJC,QAASL,GAEX,CACEM,SAAQ,WACRD,QAASxH,GAEX,CACEyH,SAAQ,iBACRD,QAASL,GAEX,CACEM,SAAQ,UACRD,QAAO,WAET,CACED,KAAI,eACJC,QAAO,WAET,CACED,KAAI,kBACJC,QAAS1H,EAAKC,aAAa2H,QAE7B,CACEH,KAAI,gBACJC,QAASxH,GAEX,CACEuH,KAAI,sBACJC,QAASL,IAGVQ,OACCV,EAASW,OAAS,EACd,CACEL,KAAI,WACJC,QAASP,EAASY,KAAT,OAEX,IAELF,OAAOX,KAKhBF,EAAIgB,aAAe,CACjBf,KAAI,KACJC,KAAM,GACNC,SAAU,GACVrG,YAAW,IAGbkG,EAAIrD,UAAY,CACd7C,YAAa8C,IAAUE,OACvBmD,KAAMrD,IAAUE,OAChBoD,KAAMtD,IAAUqE,QAAQrE,IAAUC,QAClCsD,SAAUvD,IAAUqE,QAAQrE,IAAUE,QACtC5D,MAAO0D,IAAUE,OAAOC,YAGXiD,gPC7DTkB,EAAQ,aAaCC,IAtCH,kBACV3H,EAAAC,EAAAC,cAACuB,EAAA,EAAD,CACEuB,MAAO0E,EACPzE,OAAQ,SAAA/D,GAAA,IAGFkI,EAHElI,EACNM,KACEC,aACE2H,OAHE,OAQNpH,EAAAC,EAAAC,cAAA,OACEM,MAAO,CACLI,QAAO,OACPC,aAAcC,YAAO,OAGvBd,EAAAC,EAAAC,cAAA,uBACaF,EAAAC,EAAAC,cAAA,cAASkH,GADtB,kCAhBNhI,KAAAwI","file":"component---src-templates-blog-post-js-d1fd54355b16d3b3e137.js","sourcesContent":["import React from 'react'\nimport {Link, graphql} from 'gatsby'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport {rhythm, scale} from '../utils/typography'\n\nconst BlogPostTemplate = ({\n  data: {\n    markdownRemark: post,\n    site: {\n      siteMetadata: {title: siteTitle},\n    },\n  },\n  pageContext: {previous, next},\n  location,\n}) => (\n  <Layout location={location} title={siteTitle}>\n    <SEO\n      title={post.frontmatter.title}\n      description={post.frontmatter.description || post.excerpt}\n    />\n    <h1>{post.frontmatter.title}</h1>\n    <p\n      style={{\n        ...scale(-1 / 5),\n        display: `block`,\n        marginBottom: rhythm(1),\n        marginTop: rhythm(-1),\n      }}\n    >\n      {post.frontmatter.date}\n    </p>\n    <div dangerouslySetInnerHTML={{__html: post.html}} />\n    <hr\n      style={{\n        marginBottom: rhythm(1),\n      }}\n    />\n    <Bio />\n\n    <ul\n      style={{\n        display: `flex`,\n        flexWrap: `wrap`,\n        justifyContent: `space-between`,\n        listStyle: `none`,\n        padding: 0,\n      }}\n    >\n      <li>\n        {previous && (\n          <Link to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title}\n          </Link>\n        )}\n      </li>\n      <li>\n        {next && (\n          <Link to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title} →\n          </Link>\n        )}\n      </li>\n    </ul>\n  </Layout>\n)\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: {slug: {eq: $slug}}) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        # description\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from 'typography'\nimport Lawton from 'typography-theme-lawton'\n\nLawton.baseLineHeight = 1.62\nLawton.overrideThemeStyles = () => ({\n  'a.gatsby-resp-image-link': {\n    boxShadow: `none`,\n  },\n  a: {\n    color: '#1ca086',\n  },\n  h1: {\n    marginBottom: '1.7rem',\n  },\n  h3: {\n    marginTop: '1.33rem',\n  },\n  h4: {\n    marginBottom: '0.85rem',\n  },\n  code: {\n    fontSize: '0.95rem',\n  },\n  'pre code': {\n    fontSize: '0.85rem',\n  },\n})\n\n// delete Lawton.googleFonts\n\nconst typography = new Typography(Lawton)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const {rhythm} = typography\nexport const {scale} = typography\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport {Link} from 'gatsby'\nimport {flow} from 'lodash/fp'\nimport {addProps} from 'ad-hok'\n\nimport {rhythm, scale} from '../utils/typography'\n\nconst rootPath = `${__PATH_PREFIX__}/`\n\nconst Title = ({title}) => (\n  <Link\n    style={{\n      boxShadow: `none`,\n      textDecoration: `none`,\n      color: `inherit`,\n    }}\n    to=\"/\"\n  >\n    {title}\n  </Link>\n)\n\nconst Layout = flow(\n  addProps(({location, title}) => ({\n    header:\n      location.pathname === rootPath ? (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Title title={title} />\n        </h1>\n      ) : (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Title title={title} />\n        </h3>\n      ),\n  })),\n  ({header, children}) => (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </div>\n  )\n)\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport {useStaticQuery, graphql} from 'gatsby'\n\nfunction SEO({description, lang, meta, keywords, title}) {\n  const {site} = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport {StaticQuery, graphql} from 'gatsby'\n\nimport {rhythm} from '../utils/typography'\n\nconst Bio = () => (\n  <StaticQuery\n    query={bioQuery}\n    render={({\n      site: {\n        siteMetadata: {\n          author,\n          // social\n        },\n      },\n    }) => (\n      <div\n        style={{\n          display: `flex`,\n          marginBottom: rhythm(2.5),\n        }}\n      >\n        <p>\n          Written by <strong>{author}</strong> who lives and works in NYC.\n        </p>\n      </div>\n    )}\n  />\n)\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}