{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js","webpack:///./src/components/bio.js"],"names":["__webpack_require__","r","__webpack_exports__","d","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","gatsby__WEBPACK_IMPORTED_MODULE_1__","lodash_fp__WEBPACK_IMPORTED_MODULE_2__","ad_hok__WEBPACK_IMPORTED_MODULE_3__","_components_bio__WEBPACK_IMPORTED_MODULE_4__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","_utils_typography__WEBPACK_IMPORTED_MODULE_7__","PostLink","flow","addProps","_ref","_ref$post","post","title","frontmatter","slug","fields","_ref2","_ref2$post","_ref2$post$frontmatte","date","description","excerpt","a","createElement","style","marginBottom","rhythm","boxShadow","to","dangerouslySetInnerHTML","__html","BlogIndex","_ref3","data","location","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","keywords","map","_ref4","node","key","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","query","render","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Title","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","textDecoration","color","Layout","header","__PATH_PREFIX__","marginTop","fontFamily","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","href","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","length","join","defaultProps","arrayOf","bioQuery","Bio","display","_public_static_d_2760998521_json__WEBPACK_IMPORTED_MODULE_0__"],"mappings":"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","file":"component---src-pages-index-js-7ff1b64d75db47a14a88.js","sourcesContent":["import React from 'react'\nimport {Link, graphql} from 'gatsby'\nimport {flow} from 'lodash/fp'\nimport {addProps} from 'ad-hok'\n\nimport Bio from '../components/bio'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport {rhythm} from '../utils/typography'\n\nconst PostLink = flow(\n  addProps(({post: {frontmatter: {title}, fields: {slug}}}) => ({\n    title: title || slug,\n  })),\n  ({\n    post: {\n      frontmatter: {date, description},\n      fields: {slug},\n      excerpt,\n    },\n    title,\n  }) => (\n    <div>\n      <h3\n        style={{\n          marginBottom: rhythm(1 / 4),\n        }}\n      >\n        <Link style={{boxShadow: `none`}} to={slug}>\n          {title}\n        </Link>\n      </h3>\n      <small>{date}</small>\n      <p\n        dangerouslySetInnerHTML={{\n          __html: description || excerpt,\n        }}\n      />\n    </div>\n  )\n)\n\nconst BlogIndex = ({data, location}) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO\n        title=\"All posts\"\n        keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n      />\n      <Bio />\n      {posts.map(({node, node: {fields: {slug}}}) => (\n        <PostLink post={node} key={slug} />\n      ))}\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: {fields: [frontmatter___date], order: DESC}) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            # description\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from 'typography'\nimport Wordpress2016 from 'typography-theme-wordpress-2016'\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    'a.gatsby-resp-image-link': {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport {Link} from 'gatsby'\nimport {flow} from 'lodash/fp'\nimport {addProps} from 'ad-hok'\n\nimport {rhythm, scale} from '../utils/typography'\n\nconst rootPath = `${__PATH_PREFIX__}/`\n\nconst Title = ({title}) => (\n  <Link\n    style={{\n      boxShadow: `none`,\n      textDecoration: `none`,\n      color: `inherit`,\n    }}\n    to=\"/\"\n  >\n    {title}\n  </Link>\n)\n\nconst Layout = flow(\n  addProps(({location, title}) => ({\n    header:\n      location.pathname === rootPath ? (\n        <h1\n          style={{\n            ...scale(1.5),\n            marginBottom: rhythm(1.5),\n            marginTop: 0,\n          }}\n        >\n          <Title title={title} />\n        </h1>\n      ) : (\n        <h3\n          style={{\n            fontFamily: `Montserrat, sans-serif`,\n            marginTop: 0,\n          }}\n        >\n          <Title title={title} />\n        </h3>\n      ),\n  })),\n  ({header, children}) => (\n    <div\n      style={{\n        marginLeft: `auto`,\n        marginRight: `auto`,\n        maxWidth: rhythm(24),\n        padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n      }}\n    >\n      <header>{header}</header>\n      <main>{children}</main>\n      <footer>\n        © {new Date().getFullYear()}, Built with\n        {` `}\n        <a href=\"https://www.gatsbyjs.org\">Gatsby</a>\n      </footer>\n    </div>\n  )\n)\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport {useStaticQuery, graphql} from 'gatsby'\n\nfunction SEO({description, lang, meta, keywords, title}) {\n  const {site} = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","/**\n * Bio component that queries for data\n * with Gatsby's StaticQuery component\n *\n * See: https://www.gatsbyjs.org/docs/static-query/\n */\n\nimport React from 'react'\nimport {StaticQuery, graphql} from 'gatsby'\n\nimport {rhythm} from '../utils/typography'\n\nconst Bio = () => (\n  <StaticQuery\n    query={bioQuery}\n    render={({\n      site: {\n        siteMetadata: {\n          author,\n          // social\n        },\n      },\n    }) => (\n      <div\n        style={{\n          display: `flex`,\n          marginBottom: rhythm(2.5),\n        }}\n      >\n        <p>\n          Written by <strong>{author}</strong> who lives and works in NYC.\n        </p>\n      </div>\n    )}\n  />\n)\n\nconst bioQuery = graphql`\n  query BioQuery {\n    site {\n      siteMetadata {\n        author\n        social {\n          twitter\n        }\n      }\n    }\n  }\n`\n\nexport default Bio\n"],"sourceRoot":""}